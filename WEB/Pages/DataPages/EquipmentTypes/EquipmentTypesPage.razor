@page "/equipmenttypes"

@attribute [Authorize]

@using Blazored.LocalStorage;
@using Models.Dto.GetModels;
@using Models.Entity;
@using Models.QuerySupporter;
@using System.Security.Claims;
@using Models.Utility;
@using WEB.Data.Services.Base;
@using WEB.Data.UtilityServices.Base;
@using WEB.Utility;



<PageTitle>Типы оборудования</PageTitle>



<AuthorizeView Roles="Администратор, Технический писатель">
    <Authorized>
        <RadzenContent Container="main">
            <ChildContent>
                <RadzenHeading Size="H1" Text="Типы оборудования">
                </RadzenHeading>
                <div class="row">
                    <div class="col-md-12">
                        <RadzenButton Icon="add_circle_outline" style="margin-bottom: 10px" Text="Добавить" Click="@AddRecord">
                        </RadzenButton>
                        <RadzenDataGrid @ref="grid" AllowFiltering="true" FilterMode="Radzen.FilterMode.Advanced" AllowPaging="true" AllowSorting="true" TItem="TypeEquipment" EmptyText="@ConstantValues.COLLECTION_EMPTY" PageSize="5"
                                        EqualsText="Равно" NotEqualsText="Не равно" ContainsText="Содержит" DoesNotContainText="Не содержит" IsNotEmptyText="Не пустое" AndOperatorText="И" OrOperatorText="Или"
                                        StartsWithText="Начинается с" EndsWithText="Заказнчивается с" IsNullText="Не записано" IsNotNullText="Записано" IsEmptyText="Пустое" LessThanText="Меньше чем" LessThanOrEqualsText="Меньше или равно"
                                        GreaterThanText="Больше чем" GreaterThanOrEqualsText="Больше или равно" FilterText="Фильтр" ApplyFilterText="Применить" ClearFilterText="Очистить"
                                        PagerAlwaysVisible="true" Count="@(records!.ElementsCount)" AllowMultiColumnSorting="false" LoadData="@LoadData" Data="@(records.Collection)"
                                        ShowPagingSummary="true" AllowColumnReorder="true" PagingSummaryFormat="@ConstantValues.pagingSummaryFormat" CellContextMenu="@ContextMenu" AllowColumnResize="true">
                            <Columns>
                                <RadzenDataGridColumn TItem="TypeEquipment" Property="Name" Width="100%" MinWidth="180px" Title="Название должности">
                                </RadzenDataGridColumn>
                                <RadzenDataGridColumn TItem="TypeEquipment" Filterable="false" Reorderable="false" Resizable="false" Sortable="false" Width="120px" TextAlign="TextAlign.Center" Frozen="true">
                                    <Template Context="_context">
                                        <RadzenButton Icon="edit" ButtonStyle="ButtonStyle.Light" Variant="Variant.Flat" Size="ButtonSize.Medium" @onclick:stopPropagation="true" Click="@(async () => await EditRecord(_context))">
                                        </RadzenButton>
                                        <RadzenButton ButtonStyle="ButtonStyle.Danger" Icon="delete" Size="ButtonSize.Medium" @onclick:stopPropagation="true" class="my-1 ms-1" Click="@(async () => await DeleteRecord(_context))">
                                        </RadzenButton>
                                    </Template>
                                </RadzenDataGridColumn>
                            </Columns>
                        </RadzenDataGrid>
                    </div>
                </div>

            </ChildContent>
        </RadzenContent>
    </Authorized>
    <NotAuthorized>
        <RadzenLabel Style="text-align:center" Text="@ConstantValues.ERROR_CLAIMS" />
    </NotAuthorized>
</AuthorizeView>


@code{
    private void ContextMenu(DataGridCellMouseEventArgs<TypeEquipment> args) => ContextMenuService!.Open(args, ds =>
    @<RadzenMenu Click="@(async (value) => await ContextMenuSelector(args, value))">
        <RadzenMenuItem Icon="edit" Text="Изменить запись" Value="1"></RadzenMenuItem>
        <RadzenMenuItem Icon="delete" Text="Удалить запись" Value="2"></RadzenMenuItem>

    </RadzenMenu>
    );

}